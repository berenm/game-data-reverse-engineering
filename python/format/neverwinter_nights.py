from construct import *

Extension = {
  1: 'bmp',
  3: 'tga',
  4: 'wav',
  6: 'plt',
  7: 'ini',
  10: 'txt',
  2002: 'mdl',
  2009: 'nss',
  2010: 'ncs',
  2012: 'are',
  2013: 'set',
  2014: 'ifo',
  2015: 'bic',
  2016: 'wok',
  2017: '2da',
  2022: 'txi',
  2023: 'git',
  2025: 'uti',
  2027: 'utc',
  2029: 'dlg',
  2030: 'itp',
  2032: 'utt',
  2033: 'dds',
  2035: 'uts',
  2036: 'ltr',
  2037: 'gff',
  2038: 'fac',
  2040: 'ute',
  2042: 'utd',
  2044: 'utp',
  2045: 'dft',
  2046: 'gic',
  2047: 'gui',
  2051: 'utm',
  2052: 'dwk',
  2053: 'pwk',
  2056: 'jrl',
  2058: 'utw',
  2060: 'ssf',
  2064: 'ndb',
  2065: 'ptm',
  2066: 'ptt',
}

ContentType = {
  1: 'binary',
  3: 'binary',
  4: 'binary',
  6: 'binary',
  7: 'ini',
  10: 'text',
  2002: 'mdl',
  2009: 'text',
  2010: 'binary',
  2012: 'gff',
  2013: 'ini',
  2014: 'gff',
  2015: 'gff',
  2016: 'mdl',
  2017: 'text',
  2022: 'text',
  2023: 'gff',
  2025: 'gff',
  2027: 'gff',
  2029: 'gff',
  2030: 'gff',
  2032: 'gff',
  2033: 'binary',
  2035: 'gff',
  2036: 'binary',
  2037: 'gff',
  2038: 'gff',
  2040: 'gff',
  2042: 'gff',
  2044: 'gff',
  2045: 'ini',
  2046: 'gff',
  2047: 'gff',
  2051: 'gff',
  2052: 'mdl',
  2053: 'mdl',
  2056: 'gff',
  2058: 'gff',
  2060: 'binary',
  2064: 'binary',
  2065: 'gff',
  2066: 'gff',
}

Key = Struct("file",
        Struct("header",
          Magic("KEY "),
          Magic("V1  "),
          ULInt32("bif_count"),
          ULInt32("res_count"),
          ULInt32("bif_table_offset"),
          ULInt32("res_table_offset"),
          ULInt32("build_year"),
          ULInt32("build_day"),
          Bytes("reserved", 32),
        ),
        Pointer(lambda ctx: ctx.header.bif_table_offset,
          Array(lambda ctx: ctx.header.bif_count,
            Struct("bif",
              ULInt32("size"),
              ULInt32("filename_offset"),
              ULInt16("filename_size"),
              Pointer(lambda ctx: ctx.filename_offset,
                String("filename", lambda ctx: ctx.filename_size, padchar='\x00')
              ),
              ULInt16("drives"),
            ),
          ),
        ),
        Pointer(lambda ctx: ctx.header.res_table_offset,
          Array(lambda ctx: ctx.header.res_count,
            Struct("res",
              String("name", 16, padchar='\x00'),
              ULInt16("type"),
              ULInt32("id"),
            ),
          ),
        ),
      )

Biff = Struct("file",
        Struct("header",
          Magic("BIFF"),
          Magic("V1  "),
          ULInt32("variable_resource_count"),
          ULInt32("fixed_resource_count"),
          ULInt32("variable_table_offset"),
        ),
        Padding(lambda ctx: ctx.header.variable_table_offset - 20),
        Array(lambda ctx: ctx.header.variable_resource_count,
          Struct("variable_resource_entry",
            ULInt32("id"),
            ULInt32("offset"),
            ULInt32("size"),
            ULInt32("type"),
            OnDemand(Pointer(lambda ctx: ctx.offset, Bytes("contents", lambda ctx: ctx.size))),
          ),
        ),
        Array(lambda ctx: ctx.header.fixed_resource_count,
          Struct("fixed_resource_count",
            ULInt32("id"),
            ULInt32("offset"),
            ULInt32("part_count"),
            ULInt32("size"),
            ULInt32("type"),
            OnDemand(Pointer(lambda ctx: ctx.offset, Bytes("contents", lambda ctx: ctx.size))),
          ),
        ),
      )
